import requests
from bs4 import BeautifulSoup
from concurrent.futures import ThreadPoolExecutor#Manejamos hilos para acelerar la velocidad de b√∫squeda 
from rich.console import Console
from rich.table import Table
class VulnerabilityScanner:
    def __init__(self):
        #Cabeceras
        self.headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'
        }

    def search_cves(self,service):
        url = f"https://services.nvd.nist.gov/rest/json/cves/2.0?keywordSearch={service}"
        response = requests.get(url,headers=self.headers)

        if response.status_code != 200:
            return "No se pudo obtener informacion de las vulnerabilidades"
        
        data_dict = response.json()
        cves_info = []

        for vulnerability in data_dict['vulnerabilities']:
            cve_id = vulnerability['cve']['id']
            descriptions = vulnerability['cve']['descriptions']
            description = next((desc['value'] for desc in descriptions if desc['lang']=='es'),None)
            cves_info.append(
                {
                    'cve_id': cve_id,
                    'description': description
                }
            )
        with ThreadPoolExecutor(max_workers=20) as executor:
            executor.map(self.search_cve_details,cves_info)
        
        return cves_info
    
    def search_cve_details(self, cve_info):
        cve_details_url = f"https://www.cvedetails.com/cve/{cve_info['cve_id']}/"
        response = requests.get(cve_details_url,headers=self.headers)
        if response.status_code == 200:
            soup = BeautifulSoup(response.content, 'html.parser')

            #Obtener el valor de CVSS
            cvss_info = soup.find('div',{'class': 'cvssbox'})
            cve_info['cvss'] = cvss_info.get_text().strip() if cvss_info else 'No disponible'

            #Enlace a los detalles de la vulnerabilidad
            cve_info['url']=cve_details_url

    def pretty_print(self,cves_details):
        console = Console()
        table = Table(title="Vulnerabilidades encontradas") 

        table.add_column("CVE ID", style="cyan" , no_wrap=True)
        table.add_column("Description", style="magenta")
        table.add_column("CVSS", style="gree")
        table.add_column("URL", style="blue")

        #Convertir el CVSS a float
        